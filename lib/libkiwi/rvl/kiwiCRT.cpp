#include <libkiwi.h>

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @brief Header for dynamically allocated arrays generated by CodeWarrior
 */
struct NewArrayHeader {
    /* 0x0 */ u32 size;
    /* 0x4 */ u32 count;
    /* 0x8 */ u8 padding[0x10 - 0x8];
};

/**
 * @brief Signed short argument for destructors generated by CodeWarrior
 */
enum DestructorType {
    DestructorType_AllBases = -1,   // Destroy all bases
    DestructorType_NonVirtualBases, // Destory all non-virtual bases
    DestructorType_All              // Destroy all bases and delete object
};

// Destructor function signature
typedef void (*Destructor)(void* obj, s16 type);

/**
 * @brief Destroy a dynamically allocated array
 *
 * @param array Array
 * @param dtor Destructor for each element
 */
void __destroy_new_array(u8* array, Destructor dtor) {
    if (array == NULL) {
        return;
    }

    // Header placed before contents
    const NewArrayHeader* header =
        reinterpret_cast<NewArrayHeader*>(array - sizeof(NewArrayHeader));

    if (dtor != NULL) {
        u32 size = header->size;
        u32 count = header->count;

        // Destroyed in reverse order
        u8* obj = array + (size * count);

        // Destroy all elements
        for (u32 i = 0; i < count; i++) {
            obj -= size;
            dtor(obj, DestructorType_AllBases);
        }
    }

    // Free base memory
    delete[] (array - sizeof(NewArrayHeader));
}

#ifdef __cplusplus
}
#endif
